{"version":3,"sources":["components/Homepage.js","components/SuperHeros.js","components/RQSuperHeros.js","hooks/useSuperHerosData.js","components/RQSuperHeroOnClick.js","components/UseHookSuperHeros.js","hooks/useSuperHeroData.js","components/RQSuperHero.js","components/ParallelQueries.js","components/DynamicParallelQueries.js","components/DependedQueries.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","_jsx","children","SuperHeros","isLoading","setIsloading","useState","data","setData","error","setError","useEffect","axios","get","then","res","catch","err","message","_jsxs","map","hero","name","alterEgo","id","fetchSuperHeros","RQSuperHeros","isError","isFetching","useQuery","cacheTime","staleTime","refetchOnMount","refetchOnWindowFocus","refetchInterval","refetchIntervalInBackground","console","log","Link","to","useSuperHerosData","onSuccess","onError","select","enabled","RQSuperHeroOnClick","refetch","onClick","heroName","UseHookSuperHeros","fetchSuperHero","_ref","queryKey","heroId","RQSuperHero","useParams","queryClient","useQueryClient","initialData","_queryClient$getQuery","_queryClient$getQuery2","getQueryData","find","parseInt","useSuperHeroData","fetchFriends","ParallelQueries","superHeros","friends","friend","DynamicParallelQueries","heroIds","queryResults","useQueries","queryFn","result","_result$data","_result$data2","_result$data3","DependedQueries","email","user","fetchUserByEmail","channelId","courses","fetchCources","course","QueryClient","App","QueryClientProvider","client","Router","Switch","Route","path","ReactQueryDevtools","initialIsOpen","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.620f5439.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const Homepage = () => {\n  return (\n    <div>\n      <h1>Welcome to React-Query</h1>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport const SuperHeros = () => {\n  const [isLoading, setIsloading] = useState(true)\n  const [data, setData] = useState([])\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:9000/superheroes\")\n      .then((res) => {\n        setData(res.data)\n        setIsloading(false)\n      })\n      .catch((err) => {\n        setError(err.message)\n      })\n  }, [])\n\n  if (isLoading) {\n    return <h2>Loading..</h2>\n  }\n  if (error) {\n    return <h2>{error}</h2>\n  }\n\n  return (\n    <div>\n      <h1>Super Hero detail</h1>\n      {data.map((hero) => {\n        return (\n          <div key={hero.id}>\n            {hero.name} {hero.alterEgo}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useQuery } from \"react-query\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\n\nconst fetchSuperHeros = () => {\n  return axios.get(\"http://localhost:9000/superheroes\")\n}\n\nexport const RQSuperHeros = () => {\n  // require 2 key, (unique key and function that returns a promise), third is object.\n  // fetch are cache for 5 min.\n  // background refetch is done,when page on focus, if the db is changed.\n  const { isLoading, data, isError, error, isFetching } = useQuery(\"super-heros\", fetchSuperHeros, {\n    cacheTime: 5000, // Default\n\n    staleTime: 30000, // decrease no of request.\n    // wont fetch in background for 30 sec. | we are sure that list of heros wont change frequently.\n    // fresh flag instead of stale or inactive.\n\n    refetchOnMount: true, //{'always'} query will refetch on mount -> true is best option\n\n    refetchOnWindowFocus: true, // when gain focus, data is fetch. -> default true is best option.\n\n    refetchInterval: 2000, // default-> false | 2000 -> refetch 2 sec. << If broswer is on focus >>\n\n    refetchIntervalInBackground: true, // refetch even if broswer is not in focus.\n  })\n\n  console.log(isLoading, isFetching)\n\n  if (isLoading) {\n    return <h2>Loading..</h2>\n  }\n\n  if (isError) {\n    return <h2>{error.message}</h2>\n  }\n\n  return (\n    <div>\n      <h1>React Query Super Hero</h1>\n      {data?.data.map((hero) => {\n        return (\n          <div key={hero.id}>\n            <Link to={`/rq-super-heroes/${hero.id}`}>{hero.name}</Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import { useQuery } from \"react-query\"\nimport axios from \"axios\"\n\nconst fetchSuperHeros = () => {\n  return axios.get(\"http://localhost:9000/superheroes\")\n}\n\nexport const useSuperHerosData = (onSuccess, onError) => {\n  return useQuery(\"super-heros\", fetchSuperHeros, {\n    onSuccess, //  call function on success fetch\n    onError,\n\n    select: (data) => {\n      // data transformation and filtering\n      const superHeroNames = data.data.map((hero) => hero.name)\n      return superHeroNames\n    },\n\n    enabled: false, // How to refetch data in interval, with a button to trigger on first.\n  })\n}\n","import React from \"react\"\nimport { useSuperHerosData } from \"../hooks/useSuperHerosData\"\n\nexport const RQSuperHeroOnClick = () => {\n  const onSuccess = (data) => {\n    console.log(\"Perform side effect after data fetching\", data)\n  }\n\n  const onError = (data) => {\n    console.log(\"Perfom side effect after encountering error\", data)\n  }\n\n  const { isLoading, data, isError, error, isFetching, refetch } = useSuperHerosData(\n    onSuccess,\n    onError\n  )\n\n  console.log(isLoading, isFetching)\n\n  if (isLoading || isFetching) {\n    return <h2>Loading..</h2>\n  }\n\n  if (isError) {\n    return <h2>{error.message}</h2>\n  }\n\n  return (\n    <div>\n      <h2>React Query fetch on button click Super Hero</h2>\n      <button onClick={refetch}>Fetch Now</button>\n      {data?.map((heroName) => {\n        return <div key={heroName}>{heroName}</div>\n      })}\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { useSuperHerosData } from \"../hooks/useSuperHerosData\"\n\nexport const UseHookSuperHeros = () => {\n  const onSuccess = (data) => {\n    console.log(\"Data fetch successfully\", data)\n  }\n  const onError = (data) => {\n    console.log(\"Data fetch error\", data)\n  }\n  const { isLoading, data, isError, error, isFetching, refetch } = useSuperHerosData(\n    onSuccess,\n    onError\n  )\n\n  useEffect(() => {\n    refetch()\n  }, [refetch])\n\n  if (isLoading || isFetching) {\n    return <h2>Loading..</h2>\n  }\n\n  if (isError) {\n    return <h2>{error.message}</h2>\n  }\n\n  return (\n    <div>\n      <h2>React Query fetch on data using hook Super Hero</h2>\n      {data?.map((heroName) => {\n        return <div key={heroName}>{heroName}</div>\n      })}\n    </div>\n  )\n}\n","import { useQuery, useQueryClient } from \"react-query\"\nimport axios from \"axios\"\n\nconst fetchSuperHero = ({ queryKey }) => {\n  const heroId = queryKey[1]\n  return axios.get(`http://localhost:9000/superheroes/${heroId}`)\n}\n\nexport const useSuperHeroData = (heroId) => {\n  const queryClient = useQueryClient() // cache initial query data\n  return useQuery([\"super-hero\", heroId], fetchSuperHero, {\n    initialData: () => {\n      // cache initial query data\n      const hero = queryClient\n        .getQueryData(\"super-heros\")\n        ?.data?.find((hero) => hero.id === parseInt(heroId))\n\n      if (hero) {\n        return {\n          data: hero,\n        }\n      } else {\n        return undefined\n      }\n    },\n  })\n}\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useSuperHeroData } from \"../hooks/useSuperHeroData\"\n\nexport const RQSuperHero = () => {\n  const { heroId } = useParams()\n  const { isLoading, data, isError, error } = useSuperHeroData(heroId)\n\n  if (isLoading) {\n    return <h2>Loading..</h2>\n  }\n\n  if (isError) {\n    return <h2>{error.message}</h2>\n  }\n  return (\n    <div>\n      <h2>React Query Super Hero Detail</h2>\n      <h4>\n        {data?.data.name} - {data?.data.alterEgo}\n      </h4>\n    </div>\n  )\n}\n","import React from \"react\"\nimport axios from \"axios\"\nimport { useQuery } from \"react-query\"\n\nconst fetchSuperHeros = () => {\n  return axios.get(\"http://localhost:9000/superheroes\")\n}\nconst fetchFriends = () => {\n  return axios.get(\"http://localhost:9000/friends\")\n}\n\nexport const ParallelQueries = () => {\n  const { data: superHeros } = useQuery(\"super-heros\", fetchSuperHeros)\n  const { data: friends } = useQuery(\"friends\", fetchFriends)\n  return (\n    <div>\n      <h2>Paralle Query</h2>\n      <h4>Super Heros</h4>\n      {superHeros?.data.map((hero) => {\n        return (\n          <p key={hero.id}>\n            {hero.name} {hero.alterEgo}\n          </p>\n        )\n      })}\n      <h4>Friends</h4>\n      {friends?.data.map((friend) => {\n        return <p key={friend.id}>{friend.name}</p>\n      })}\n    </div>\n  )\n}\n","import axios from \"axios\"\nimport React from \"react\"\nimport { useQueries } from \"react-query\"\n\nconst fetchSuperHeros = (heroId) => {\n  return axios.get(`http://localhost:9000/superheroes/${heroId}`)\n}\n\nexport const DynamicParallelQueries = ({ heroIds }) => {\n  const queryResults = useQueries(\n    heroIds.map((id) => {\n      return {\n        queryKey: [\"super-hero\", id],\n        queryFn: () => fetchSuperHeros(id),\n      }\n    })\n  )\n  console.log(queryResults)\n\n  return (\n    <div>\n      <h2>Dynamic Parallel Page</h2>\n      {queryResults?.map((result) => {\n        return (\n          <div key={result.data?.data.id}>\n            {result.data?.data.name}-{result.data?.data.alterEgo}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useQuery } from \"react-query\"\nimport axios from \"axios\"\n\nconst fetchUserByEmail = (email) => {\n  return axios.get(`http://localhost:9000/users/${email}`)\n}\nconst fetchCources = (channelId) => {\n  return axios.get(`http://localhost:9000/channels/${channelId}`)\n}\n\nexport const DependedQueries = ({ email }) => {\n  const { data: user } = useQuery([\"user\", email], () => fetchUserByEmail(email))\n  const channelId = user?.data.channelId\n  const { data: courses } = useQuery([\"courses\", channelId], () => fetchCources(channelId), {\n    enabled: !!channelId, //enable when channelId have a variable.\n  })\n\n  console.log(courses)\n  return (\n    <div>\n      <h2>Depended Queries (Result depend on another query)</h2>\n      <h4>email: {user?.data.id}</h4>\n      <h4>channel Id: {channelId}</h4>\n      <h2>Courses</h2>\n      {courses?.data.courses.map((course) => {\n        return <h4 key={course}>{course}</h4>\n      })}\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport { QueryClientProvider, QueryClient } from \"react-query\" // Added react-query\nimport { ReactQueryDevtools } from \"react-query/devtools\" // Added react-query devtools\nimport { Homepage } from \"./components/Homepage\"\nimport { SuperHeros } from \"./components/SuperHeros\"\nimport { RQSuperHeros } from \"./components/RQSuperHeros\"\nimport { RQSuperHeroOnClick } from \"./components/RQSuperHeroOnClick\"\nimport \"./App.css\"\nimport { UseHookSuperHeros } from \"./components/UseHookSuperHeros\"\nimport { RQSuperHero } from \"./components/RQSuperHero\"\nimport { ParallelQueries } from \"./components/ParallelQueries\"\nimport { DynamicParallelQueries } from \"./components/DynamicParallelQueries\"\nimport { DependedQueries } from \"./components/DependedQueries\"\n\nconst queryClient = new QueryClient() // Added react-query\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to='/'>Home</Link>\n              </li>\n              <li>\n                <Link to='/super-heroes'>Traditional Super Heroes</Link>\n              </li>\n              <li>\n                <Link to='/rq-super-heroes'>RQ Super Heroes</Link>\n              </li>\n              <li>\n                <Link to='/rq-super-heroes-click'>RQ Super Heroes on Button</Link>\n              </li>\n              <li>\n                <Link to='/rq-super-heroes-hook'>RQ Super Heroes Hook</Link>\n              </li>\n              <li>\n                <Link to='/rq-parallel'>RQ Parallel</Link>\n              </li>{\" \"}\n              <li>\n                <Link to='/rq-dynamic-parallel'>RQ Dynamic Parallel</Link>\n              </li>{\" \"}\n              <li>\n                <Link to='/rq-depend'>RQ Depend</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path='/rq-depend'>\n              <DependedQueries email='rabinphaiju@gmail.com' />\n            </Route>{\" \"}\n            <Route path='/rq-dynamic-parallel'>\n              <DynamicParallelQueries heroIds={[1, 3]} />\n            </Route>\n            <Route path='/rq-parallel'>\n              <ParallelQueries />\n            </Route>\n            <Route path='/rq-super-heroes/:heroId'>\n              <RQSuperHero />\n            </Route>\n            <Route path='/super-heroes'>\n              <SuperHeros />\n            </Route>\n            <Route path='/rq-super-heroes'>\n              <RQSuperHeros />\n            </Route>\n            <Route path='/rq-super-heroes-click'>\n              <RQSuperHeroOnClick />\n            </Route>\n            <Route path='/rq-super-heroes-hook'>\n              <UseHookSuperHeros />\n            </Route>\n            <Route path='/'>\n              <Homepage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      <ReactQueryDevtools initialIsOpen={false} position='bottom-right' />\n    </QueryClientProvider> // Added react-query\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}